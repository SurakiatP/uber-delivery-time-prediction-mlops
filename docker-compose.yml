services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  fastapi_app:
    build:
      context: .
      dockerfile: fastapi_app/Dockerfile
    volumes:
      - ./fastapi_app:/app
      - ./src:/app/src
    ports:
      - "8000:8000"
    environment:
      MODEL_URI: models:/DeliveryTimePrediction/Production
      MLFLOW_TRACKING_URI: http://host.docker.internal:5000
    depends_on:
      - kafka
    restart: on-failure

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
    restart: on-failure

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - fastapi_app
      - kafka
    environment:
      FASTAPI_HOST: fastapi_app
      FASTAPI_PORT: 8000
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    restart: on-failure

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    depends_on:
      - prometheus

  airflow-init:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: uber-delivery-time-prediction-mlops-airflow-init
    container_name: airflow-init
    entrypoint: airflow db init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"

  airflow-webserver:
    image: uber-delivery-time-prediction-mlops-airflow-init
    container_name: airflow-webserver
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/app/src
      - ./.config/gdrive_sa.json:/app/.config/gdrive_sa.json
    command: webserver

  airflow-scheduler:
    image: uber-delivery-time-prediction-mlops-airflow-init
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - .:/app
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/app/src
      - ./.config/gdrive_sa.json:/app/.config/gdrive_sa.json
    command: scheduler